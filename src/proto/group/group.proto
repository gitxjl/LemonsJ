syntax = "proto3";
option go_package = "./group;group";
package group;

message CommonResp{
  int32   ErrorCode = 1;
  string  ErrorMsg = 2;
}

message CreateGroupReq{
  repeated GroupAddMemberInfo memberList = 1;
  string groupName = 2;
  string introduction = 3;
  string notification = 4;
  string faceUrl = 5;
  string token = 6;
  string operationID = 7;
  string ex = 8;
}
message GroupAddMemberInfo{
  string uid = 1;
  int32 setRole = 2;
}
message CreateGroupResp{
  int32   ErrorCode = 1;
  string  ErrorMsg = 2;
  string  groupID = 3;
}

message GetGroupsInfoReq{
  repeated string groupIDList = 1;
  string token = 2;
  string operationID = 3;
}
message GetGroupsInfoResp{
  int32   ErrorCode = 1;
  string  ErrorMsg = 2;
  repeated GroupInfo data = 3;
}

message SetGroupInfoReq{
  string groupID = 1;
  string groupName = 2;
  string notification = 3;
  string introduction = 4;
  string faceUrl = 5;
  string token = 6;
  string operationID = 7;
}


message GetGroupApplicationListReq {
  string UID = 1;
  string OperationID = 2;
}

message GetGroupApplicationList_Data_User {
  string ID = 1;
  string GroupID = 2;
  string FromUserID = 3;
  string ToUserID = 4;
  int32  Flag = 5;
  string RequestMsg = 6;
  string HandledMsg = 7;
  int64  AddTime = 8;
  string FromUserNickname = 9;
  string ToUserNickname = 10;
  string FromUserFaceUrl = 11;
  string  ToUserFaceUrl = 12;
  string HandledUser = 13;
  int32  Type = 14;
  int32  HandleStatus = 15;
  int32  HandleResult = 16;
}

message GetGroupApplicationListData {
  int32 Count = 1;
  repeated GetGroupApplicationList_Data_User User = 2;
}

message GetGroupApplicationListResp {
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  GetGroupApplicationListData Data = 3;
}

message TransferGroupOwnerReq {
  string GroupID = 1;
  string OldOwner = 2;
  string NewOwner = 3;
  string OperationID = 4;
}

message TransferGroupOwnerResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
}

message JoinGroupReq{
  string groupID = 1;
  string message = 2;
  string token = 3;
  string OperationID = 4;
}

message GroupApplicationResponseReq{
  string OperationID = 1;
  string OwnerID = 2;
  string GroupID = 3;
  string FromUserID = 4;
  string FromUserNickName = 5;
  string FromUserFaceUrl = 6;
  string ToUserID = 7;
  string  ToUserNickName = 8;
  string  ToUserFaceUrl = 9;
  int64 AddTime = 10;
  string RequestMsg = 11;
  string HandledMsg = 12;
  int32 Type = 13;
  int32 HandleStatus = 14;
  int32 HandleResult = 15;
}

message GroupApplicationResponseResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
}


message SetOwnerGroupNickNameReq{
  string groupID = 1;
  string nickName = 2;
  string OperationID = 3;
  string token = 4;
}


message QuitGroupReq{
  string groupID = 1;
  string operationID = 2;
  string token = 3;
}


message GroupApplicationUserInfo{
  string groupID = 1;
  string uid = 2;
  string name = 3;
  string icon = 4;
  string reqMsg = 5;
  int64 applicationTime = 6;
  int32 flag = 7;
  string operatorID = 8;
  string handledMsg = 9;
}

message GroupMemberFullInfo {
  string userId = 1;
  int32 role = 2;
  uint64 joinTime = 3;
  string nickName = 4;
  string faceUrl = 5;
}

message GetGroupMemberListReq {
  string groupID = 1;
  string token = 2;
  string operationID = 3;
  int32 filter = 4;
  int32 nextSeq = 5;
}

message GetGroupMemberListResp {
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated GroupMemberFullInfo memberList = 3;
  int32 nextSeq = 4;
}



message GetGroupMembersInfoReq {
  string groupID = 1;
  repeated string memberList = 2;
  string token = 3;
  string operationID = 4;
}

message GetGroupMembersInfoResp {
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated GroupMemberFullInfo memberList = 3;

}

message KickGroupMemberReq {
  string groupID = 1;
  repeated GroupMemberFullInfo uidListInfo = 2;
  string reason = 3;
  string token = 4;
  string operationID = 5;
}

message Id2Result {
  string uId = 1;
  int32 result = 2; //0 ok; -1 error
}

message KickGroupMemberResp {
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated Id2Result id2result = 3;
}


message getJoinedGroupListReq {
  string token = 1;
  string operationID = 2;
}

message GroupInfo {
  string groupId = 1;
  string groupName = 2;
  string notification = 3;
  string introduction = 4;
  string faceUrl = 5;
  uint64 createTime = 6;
  string ownerId = 7;
  uint32 memberCount = 8;
}

message getJoinedGroupListResp{
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated  GroupInfo groupList = 3;
}


message inviteUserToGroupReq {
  string token = 1;
  string operationID = 2;
  string groupID = 3;
  string reason = 4;
  repeated string uidList = 5;
}

message inviteUserToGroupResp {
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated  Id2Result id2result = 3; // 0 ok, -1 error
}

message GetGroupAllMemberReq {
  string groupID = 1;
  string token = 2;
  string operationID = 3;
}

message GetGroupAllMemberResp {
  int32   errorCode = 1;
  string  errorMsg = 2;
  repeated GroupMemberFullInfo memberList = 3;
}



service group{
  rpc createGroup(CreateGroupReq) returns(CreateGroupResp);
  rpc joinGroup(JoinGroupReq) returns(CommonResp);
  rpc quitGroup(QuitGroupReq) returns(CommonResp);
  rpc getGroupsInfo(GetGroupsInfoReq) returns(GetGroupsInfoResp);
  rpc setGroupInfo(SetGroupInfoReq) returns(CommonResp);
  rpc getGroupApplicationList(GetGroupApplicationListReq) returns(GetGroupApplicationListResp);
  rpc transferGroupOwner(TransferGroupOwnerReq) returns(TransferGroupOwnerResp);
  rpc groupApplicationResponse(GroupApplicationResponseReq) returns(GroupApplicationResponseResp);
  //  rpc setOwnerGroupNickName(SetOwnerGroupNickNameReq) returns(CommonResp);
  rpc getGroupMemberList(GetGroupMemberListReq) returns(GetGroupMemberListResp);
  rpc getGroupMembersInfo(GetGroupMembersInfoReq) returns(GetGroupMembersInfoResp);
  rpc kickGroupMember(KickGroupMemberReq) returns (KickGroupMemberResp);
  rpc getJoinedGroupList(getJoinedGroupListReq) returns (getJoinedGroupListResp);
  rpc inviteUserToGroup(inviteUserToGroupReq) returns (inviteUserToGroupResp);

  rpc getGroupAllMember(GetGroupAllMemberReq) returns(GetGroupAllMemberResp);
}







